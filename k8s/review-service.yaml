apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-service
  namespace: dev
  labels: { app: review-service }
spec:
  replicas: 2
  selector: { matchLabels: { app: review-service } }
  template:
    metadata: { labels: { app: review-service } }
    spec:
      nodeSelector: { "eks.amazonaws.com/nodegroup": "s3j-node-app" }
      containers:
      - name: review-service
        image: ${ECR}/sang3jeom/review-service:latest
        ports: [ { containerPort: 8084 } ]
        env:
        - name: RDS_ENDPOINT
          valueFrom: { configMapKeyRef: { name: sang3jeom-config, key: RDS_ENDPOINT } }
        - name: RDS_DB_NAME
          valueFrom: { configMapKeyRef: { name: sang3jeom-config, key: RDS_DB_NAME } }
        - name: DATASOURCE_USERNAME
          valueFrom: { secretKeyRef: { name: sang3jeom-secrets, key: RDS_USERNAME } }
        - name: DATASOURCE_PASSWORD
          valueFrom: { secretKeyRef: { name: sang3jeom-secrets, key: RDS_PASSWORD } }
        - name: S3_BUCKET
          valueFrom: { configMapKeyRef: { name: sang3jeom-config, key: S3_BUCKET } }
        - name: S3_REGION
          valueFrom: { configMapKeyRef: { name: sang3jeom-config, key: S3_REGION } }
        - name: AWS_REGION
          valueFrom: { configMapKeyRef: { name: sang3jeom-config, key: AWS_REGION } }
        - name: AWS_ACCESS_KEY
          valueFrom: { secretKeyRef: { name: sang3jeom-secrets, key: AWS_ACCESS_KEY } }
        - name: AWS_SECRET_KEY
          valueFrom: { secretKeyRef: { name: sang3jeom-secrets, key: AWS_SECRET_KEY } }           
---
apiVersion: v1
kind: Service
metadata:
  name: review-service
  namespace: dev
  labels: { app: review-service }
spec:
  selector: { app: review-service }
  ports: [ { port: 8084, targetPort: 8084 } ]
  type: ClusterIP 